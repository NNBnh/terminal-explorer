#!/bin/sh

#   ______                    _             __
#  /_  __/__  _________ ___  (_)___  ____ _/ /
#   / / / _ \/ ___/ __ `__ \/ / __ \/ __ `/ /
#  / / /  __/ /  / / / / / / / / / / /_/ / /
# /_/  \___/_/  /_/ /_/ /_/_/_/ /_/\__,_/_/
#     ______           __
#    / ____/_ ______  / /___  ________  _____
#   / __/ | |/_/ __ \/ / __ \/ ___/ _ \/ ___/
#  / /____>  </ /_/ / / /_/ / /  /  __/ /
# /_____/_/|_/ .___/_/\____/_/   \___/_/
#           /_/

# File:         te
# Description:  Terminal explorer
# Author:       NNB
#               └─ https://github.com/NNBnh
# URL:          https://github.com/NNBnh/terminal-explorer
# License:      GPLv3

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.


# Values
TMPDIR="${TMPDIR:-/tmp}"

IFS='
'

ACTIONS="${1:-p}"
ACTION="${ACTIONS%$REGISTER}"
DATAS="$@"

REGISTER="${ACTIONS#?}"

case "$REGISTER" in
	*'/'*)
		printf '%s' "te: '$REGISTER': register's name mustn't include '/'"
		exit 1
	;;
esac

TEMPORARY="${TERMINALEXPLORER_TEMPORARY:-$TMPDIR/terminal-explorer}"
CLIPBOARD_SET_COMMAND="${TERMINALEXPLORER_CLIPBOARD_SET_COMMAND:-clipb copy}"
CLIPBOARD_GET_COMMAND="${TERMINALEXPLORER_CLIPBOARD_GET_COMMAND:-clipb paste}"
COPY_COMMAND="${TERMINALEXPLORER_COPY_COMMAND:-cp}"
CUT_COMMAND="${TERMINALEXPLORER_CUT_COMMAND:-mv}"

if [ -z "$REGISTER" ]; then
	mkdir -p "$TEMPORARY" && ACTION_PATH="$TEMPORARY/action"
else
	mkdir -p "$TEMPORARY/actions" && ACTION_PATH="$TEMPORARY/actions/$REGISTER"
	mkdir -p "$TEMPORARY/registers"
fi


# Functions
get_files_path() {
	for file in "$@"; do
		[ -z "$file" ] && continue

		FILES_PATH="${FILES_PATH}file://$(hostname)$(realpath "$file")
"
	done
}

clipboard_files() {
	if [ -p '/dev/stdin' ] && [ "$DATAS" = "$ACTIONS" ]; then
		get_files_path $(cat -)
	else
		get_files_path "${@#$1}"
	fi

	if [ -z "$REGISTER" ]; then
		eval "$CLIPBOARD_SET_COMMAND \"\$FILES_PATH\""
	else
		printf "$FILES_PATH" > "$TEMPORARY/registers/$REGISTER"
	fi

	printf '%s' "$1" > "$ACTION_PATH"
}

move_files() {
	if [ -z "$REGISTER" ]; then
		FILES_PATH_RAW=$(eval "$CLIPBOARD_GET_COMMAND")
	else
		FILES_PATH_RAW=$(< "$TEMPORARY/registers/$REGISTER")
	fi

	printf "$FILES_PATH_RAW" | sed -e 's/^file:\/\/[^\/]*\//\//g' -e 's/\r$//g' > "$TEMPORARY/$$"

	while IFS= read -r file_path || [ -n "$file_path" ]; do
		[ ! -e "$file_path" ] && {
			printf '%s' "te: '$file_path': No such file or directory"

			exit 1
		}
	done < "$TEMPORARY/$$"

	while IFS= read -r file_path || [ -n "$file_path" ]; do
		file_base=$(basename "$file_path")
		file_move="$file_base"

		copy='1'

		while [ -e "$path/$file_move" ]; do
			copy=$(( i + 1 ))

			file_move="$file_base ($copy)"
		done

		eval "$1 \"\$file_path\" \"./\$file_move\""

		files_move="${files_move:+$files_move
}$file_move"
	done < "$TEMPORARY/$$"

	rm "$TEMPORARY/$$"

	[ "$1" = "$CUT_COMMAND" ] && clipboard_files 'copy' "$files_move"
}


# Start
case "$ACTION" in
	[cy]) clipboard_files 'copy'     "${@#$ACTIONS}" ;;
	[xd]) clipboard_files 'cut'      "${@#$ACTIONS}" ;;
	[ls]) clipboard_files 'symlink'  "${@#$ACTIONS}" ;;
	'h')  clipboard_files 'hardlink' "${@#$ACTIONS}" ;;
	[CY]) move_files "$COPY_COMMAND"                 ;;
	[XD]) move_files "$CUT_COMMAND"                  ;;
	[LS]) move_files 'ln -s'                         ;;
	'H')  move_files 'ln'                            ;;
	[vpVP])
		case $(< "$ACTION_PATH") in
			'cut')      MOVE_COMMAND="$CUT_COMMAND"  ;;
			'symlink')  MOVE_COMMAND="ln -s"         ;;
			'hardlink') MOVE_COMMAND="ln"            ;;
			*)          MOVE_COMMAND="$COPY_COMMAND" ;;
		esac

		move_files "$MOVE_COMMAND" "${DATAS:-${@#$ACTIONS}}"
	;;
	*)
		if [ "$ACTIONS" = '--help' ] || [ "$ACTIONS" = '-h' ]; then
			printf "\033[1mTerminal explorer\033[0m is a files manager tool that
mimic the way GUI's file manager do copy/cut/paste.

\033[1mUsage:\033[0m
    te ACTION[REGISTER] FILES
    te PASTE[REGISTER]

\033[1mACTION:\033[0m
  c, y          copy FILES into REGISTER's clipboard and set paste's action to copy
  x, d          copy FILES into REGISTER's clipboard and set paste's action to cut
  l, s          copy FILES into REGISTER's clipboard and set paste's action to symlink
  h             copy FILES into REGISTER's clipboard and set paste's action to hardlink

\033[1mPASTE:\033[0m
  v, V, p, P    paste FILES from REGISTER's clipboard,
  C, Y          ignore paste's action, copy     FILES from REGISTER's clipboard
  X, D          ignore paste's action, cut      FILES from REGISTER's clipboard
  L, S          ignore paste's action, symlink  FILES from REGISTER's clipboard
  H             ignore paste's action, hardlink FILES from REGISTER's clipboard

\033[1mREGISTER\033[0m if leave empty will use system clipboard,
otherwise it's name can be anything that doesn't include '/'.

\033[1mExamples:\033[0m
    te x foo
    te ctest bar
    te p
    te ptest"
		else
			printf "te: invalid actions -- '$ACTIONS'
Try 'te --help' for more information."

			exit 1
		fi
	;;
esac


exit 0
